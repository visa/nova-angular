/**
 *              Â© 2025 Visa
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **/
/** This file is autogenerated */
import { Routes } from '@angular/router';
import { TITLE_SEPARATOR, TITLE_SUFFIX } from 'apps/workshop/src/assets/app.constants';

export const accordionRoutes: Routes = [
	{ loadComponent: () => import('./accordion.docs').then(m => m.AccordionDocsComponent), path: '' },
	{ loadComponent: () => import('./default/default.docs').then(m => m.DefaultAccordionComponent), path: 'default', title: 'Default accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./disabled/disabled.docs').then(m => m.DisabledAccordionComponent), path: 'disabled', title: 'Disabled accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./multi-select-default/multi-select-default.docs').then(m => m.MultiSelectDefaultAccordionComponent), path: 'multi-select-default', title: 'Multi select default accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./multi-select-expanded/multi-select-expanded.docs').then(m => m.MultiSelectExpandedAccordionComponent), path: 'multi-select-expanded', title: 'Multi select expanded accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./multi-select-subtle/multi-select-subtle.docs').then(m => m.MultiSelectSubtleAccordionComponent), path: 'multi-select-subtle', title: 'Multi select subtle accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./multi-select-with-disabled-accordion/multi-select-with-disabled-accordion.docs').then(m => m.MultiSelectWithDisabledAccordionComponent), path: 'multi-select-with-disabled-accordion', title: 'Multi select with disabled accordion accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./separate-toggle/separate-toggle.docs').then(m => m.SeparateToggleAccordionComponent), path: 'separate-toggle', title: 'Separate toggle accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./single-select-default/single-select-default.docs').then(m => m.SingleSelectDefaultAccordionComponent), path: 'single-select-default', title: 'Single select default accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./single-select-expanded/single-select-expanded.docs').then(m => m.SingleSelectExpandedAccordionComponent), path: 'single-select-expanded', title: 'Single select expanded accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./single-select-subtle/single-select-subtle.docs').then(m => m.SingleSelectSubtleAccordionComponent), path: 'single-select-subtle', title: 'Single select subtle accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./single-select-with-disabled-accordion/single-select-with-disabled-accordion.docs').then(m => m.SingleSelectWithDisabledAccordionComponent), path: 'single-select-with-disabled-accordion', title: 'Single select with disabled accordion accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./subtle/subtle.docs').then(m => m.SubtleAccordionComponent), path: 'subtle', title: 'Subtle accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./subtle-disabled/subtle-disabled.docs').then(m => m.SubtleDisabledAccordionComponent), path: 'subtle-disabled', title: 'Subtle disabled accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./subtle-with-icon/subtle-with-icon.docs').then(m => m.SubtleWithIconAccordionComponent), path: 'subtle-with-icon', title: 'Subtle with icon accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-arrow-key-navigation/with-arrow-key-navigation.docs').then(m => m.WithArrowKeyNavAccordionComponent), path: 'with-arrow-key-navigation', title: 'With arrow key navigation accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-arrow-keys-and-no-tab-navigation/with-arrow-keys-and-no-tab-navigation.docs').then(m => m.ArrowKeysAndNoTabNavAccordionComponent), path: 'with-arrow-keys-and-no-tab-navigation', title: 'With arrow keys and no tab navigation accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-badge/with-badge.docs').then(m => m.WithBadgeAccordionComponent), path: 'with-badge', title: 'With badge accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-custom-accessible-markup/with-custom-accessible-markup.docs').then(m => m.CustomA11yMarkupAccordionComponent), path: 'with-custom-accessible-markup', title: 'With custom accessible markup accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-custom-toggle-icons/with-custom-toggle-icons.docs').then(m => m.WithCustomToggleIconsAccordionComponent), path: 'with-custom-toggle-icons', title: 'With custom toggle icons accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-icon/with-icon.docs').then(m => m.WithIconAccordionComponent), path: 'with-icon', title: 'With icon accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-programmatic-expansion/with-programmatic-expansion.docs').then(m => m.WithProgrammaticExpansionAccordionComponent), path: 'with-programmatic-expansion', title: 'With programmatic expansion accordion component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX }
];

export default accordionRoutes;
/**
 *              Copyright (c) 2025 Visa, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **/
/** This file is autogenerated */
import { Routes } from '@angular/router';
import { TITLE_SEPARATOR, TITLE_SUFFIX } from 'apps/workshop/src/assets/app.constants';

export const comboboxRoutes: Routes = [
	{ loadComponent: () => import('./combobox.docs').then(m => m.ComboboxDocsComponent), path: '' },
	{ loadComponent: () => import('./auto-autocomplete/auto-autocomplete.docs').then(m => m.AutoAutocompleteComboboxComponent), path: 'auto-autocomplete', title: 'Auto autocomplete combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./default/default.docs').then(m => m.DefaultComboboxComponent), path: 'default', title: 'Default combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./disabled/disabled.docs').then(m => m.DisabledComboboxComponent), path: 'disabled', title: 'Disabled combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./dynamic-data-set/dynamic-data-set.docs').then(m => m.DynamicDataSetComboboxComponent), path: 'dynamic-data-set', title: 'Dynamic data set combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./error/error.docs').then(m => m.ErrorComboboxComponent), path: 'error', title: 'Error combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./fully-custom-filter/fully-custom-filter.docs').then(m => m.CustomFilterComboboxComponent), path: 'fully-custom-filter', title: 'Fully custom filter combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./highlight-on-close/highlight-on-close.docs').then(m => m.HighlightOnCloseComboboxComponent), path: 'highlight-on-close', title: 'Highlight on close combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./infinite-scroll/infinite-scroll.docs').then(m => m.InfiniteScrollComboboxComponent), path: 'infinite-scroll', title: 'Infinite scroll combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./manual-autocomplete/manual-autocomplete.docs').then(m => m.ManualAutocompleteComboboxComponent), path: 'manual-autocomplete', title: 'Manual autocomplete combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven/model-driven.docs').then(m => m.ModelDrivenComboboxComponent), path: 'model-driven', title: 'Model driven combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven-fb/model-driven-fb.docs').then(m => m.ModelDrivenFbComboboxComponent), path: 'model-driven-fb', title: 'Model driven fb combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven-with-programmatic-selection/model-driven-with-programmatic-selection.docs').then(m => m.ModelDrivenProgrammticSelectionComboboxComponent), path: 'model-driven-with-programmatic-selection', title: 'Model driven with programmatic selection combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./open-on-select/open-on-select.docs').then(m => m.OpenOnSelectComboboxComponent), path: 'open-on-select', title: 'Open on select combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./read-only/read-only.docs').then(m => m.ReadOnlyComboboxComponent), path: 'read-only', title: 'Read only combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./shared-combobox-with-delayed-data/shared-combobox/shared-combobox.docs').then(m => m.SharedComboboxDocsComponent), path: 'shared-combobox', title: 'Shared combobox combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./shared-combobox-with-delayed-data/shared-combobox-with-delayed-data.docs').then(m => m.DisplayedComboboxDocsComponent), path: 'shared-combobox-with-delayed-data', title: 'Shared combobox with delayed data combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./template-driven/template-driven.docs').then(m => m.TemplateDrivenComboboxComponent), path: 'template-driven', title: 'Template driven combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./template-driven-with-programmatic-selection/template-driven-with-programmatic-selection.docs').then(m => m.TemplateDrivenProgrammaticSelectionComboboxComponent), path: 'template-driven-with-programmatic-selection', title: 'Template driven with programmatic selection combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-clear-button/with-clear-button.docs').then(m => m.WithClearButtonComboboxComponent), path: 'with-clear-button', title: 'With clear button combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-disabled-option/with-disabled-option.docs').then(m => m.DisabledOptionComboboxComponent), path: 'with-disabled-option', title: 'With disabled option combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-inline-label/with-inline-label.docs').then(m => m.WithInlineLabelComboboxComponent), path: 'with-inline-label', title: 'With inline label combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-inline-message/with-inline-message.docs').then(m => m.WithInlineMessageComboboxComponent), path: 'with-inline-message', title: 'With inline message combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-leading-icon/with-leading-icon.docs').then(m => m.WithLeadingIconComboboxComponent), path: 'with-leading-icon', title: 'With leading icon combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-scroll-bar/with-scroll-bar.docs').then(m => m.ScrollBarComboboxComponent), path: 'with-scroll-bar', title: 'With scroll bar combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-selected-option/with-selected-option.docs').then(m => m.WithSelectedOptionComboboxComponent), path: 'with-selected-option', title: 'With selected option combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./without-dropdown-chevron/without-dropdown-chevron.docs').then(m => m.WithoutDropdownChevronComboboxComponent), path: 'without-dropdown-chevron', title: 'Without dropdown chevron combobox component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX }
];

export default comboboxRoutes;
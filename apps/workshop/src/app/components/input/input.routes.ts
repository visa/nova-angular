/**
 *              Â© 2025 Visa
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **/
/** This file is autogenerated */
import { Routes } from '@angular/router';
import { TITLE_SEPARATOR, TITLE_SUFFIX } from 'apps/workshop/src/assets/app.constants';

export const inputRoutes: Routes = [
	{ loadComponent: () => import('./input.docs').then(m => m.InputDocsComponent), path: '' },
	{ loadComponent: () => import('./character-counter/character-counter.docs').then(m => m.CharacterCounterInputComponent), path: 'character-counter', title: 'Character counter input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./default/default.docs').then(m => m.DefaultInputComponent), path: 'default', title: 'Default input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./disabled/disabled.docs').then(m => m.DisabledInputComponent), path: 'disabled', title: 'Disabled input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./error/error.docs').then(m => m.ErrorInputComponent), path: 'error', title: 'Error input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./initial-value/initial-value.docs').then(m => m.InitialValueInputComponent), path: 'initial-value', title: 'Initial value input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./inline/inline.docs').then(m => m.InlineInputComponent), path: 'inline', title: 'Inline input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./inline-message/inline-message.docs').then(m => m.InlineMessageInputComponent), path: 'inline-message', title: 'Inline message input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./leading-icon/leading-icon.docs').then(m => m.LeadingIconInputComponent), path: 'leading-icon', title: 'Leading icon input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven/model-driven.docs').then(m => m.ModelDrivenInputComponent), path: 'model-driven', title: 'Model driven input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven-fb/model-driven-fb.docs').then(m => m.ModelDrivenFbInputComponent), path: 'model-driven-fb', title: 'Model driven fb input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven-form/model-driven-form.docs').then(m => m.ModelDrivenFormInputComponent), path: 'model-driven-form', title: 'Model driven form input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven-form-field-disabled/model-driven-form-field-disabled.docs').then(m => m.NovaModelDrivenFormFieldDisabledComponent), path: 'model-driven-form-field-disabled', title: 'Model driven form field disabled input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./one-time-passcode/one-time-passcode.docs').then(m => m.OneTimePasscodeInputComponent), path: 'one-time-passcode', title: 'One time passcode input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./prefix/prefix.docs').then(m => m.PrefixInputComponent), path: 'prefix', title: 'Prefix input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./read-only/read-only.docs').then(m => m.ReadOnlyInputComponent), path: 'read-only', title: 'Read only input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./suffix/suffix.docs').then(m => m.SuffixInputComponent), path: 'suffix', title: 'Suffix input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./template-driven/template-driven.docs').then(m => m.TemplateDrivenInputComponent), path: 'template-driven', title: 'Template driven input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./template-driven-form/template-driven-form.docs').then(m => m.TemplateDrivenFormInputComponent), path: 'template-driven-form', title: 'Template driven form input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./textarea-with-fixed-height/textarea-with-fixed-height.docs').then(m => m.TextareaWithFixedHeightInputComponent), path: 'textarea-with-fixed-height', title: 'Textarea with fixed height input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./textarea-with-fixed-height-and-resize/textarea-with-fixed-height-and-resize.docs').then(m => m.TextareaWithFixedHeightAndResizeInputComponent), path: 'textarea-with-fixed-height-and-resize', title: 'Textarea with fixed height and resize input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./textarea-with-native-rows-attribute/textarea-with-native-rows-attribute.docs').then(m => m.TextareaWithNativeRowsAttributeInputComponent), path: 'textarea-with-native-rows-attribute', title: 'Textarea with native rows attribute input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./textarea-with-resize/textarea-with-resize.docs').then(m => m.TextareaWithResizeInputComponent), path: 'textarea-with-resize', title: 'Textarea with resize input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./textarea-without-resize/textarea-without-resize.docs').then(m => m.TextareaWithoutResizeInputComponent), path: 'textarea-without-resize', title: 'Textarea without resize input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-action-button/with-action-button.docs').then(m => m.WithActionButtonInputComponent), path: 'with-action-button', title: 'With action button input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-clear-text-button/with-clear-text-button.docs').then(m => m.WithClearTextButtonInputComponent), path: 'with-clear-text-button', title: 'With clear text button input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-masked-field/with-masked-field.docs').then(m => m.WithMaskedFieldInputComponent), path: 'with-masked-field', title: 'With masked field input component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX }
];

export default inputRoutes;
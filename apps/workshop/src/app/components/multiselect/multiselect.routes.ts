/**
 *              Â© 2025 Visa
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **/
/** This file is autogenerated */
import { Routes } from '@angular/router';
import { TITLE_SEPARATOR, TITLE_SUFFIX } from 'apps/workshop/src/assets/app.constants';

export const multiselectRoutes: Routes = [
	{ loadComponent: () => import('./multiselect.docs').then(m => m.MultiselectDocsComponent), path: '' },
	{ loadComponent: () => import('./archived/archived.docs').then(m => m.ArchivedMultiselectComponent), path: 'archived', title: 'Archived multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./auto-autocomplete/auto-autocomplete.docs').then(m => m.AutoAutocompleteMultiselectComponent), path: 'auto-autocomplete', title: 'Auto autocomplete multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./default/default.docs').then(m => m.DefaultMultiselectComponent), path: 'default', title: 'Default multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./disabled/disabled.docs').then(m => m.DisabledMultiselectComponent), path: 'disabled', title: 'Disabled multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./dynamic-data-set/dynamic-data-set.docs').then(m => m.DynamicDataSetMultiselectComponent), path: 'dynamic-data-set', title: 'Dynamic data set multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./error/error.docs').then(m => m.ErrorMultiselectComponent), path: 'error', title: 'Error multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./infinite-scroll/infinite-scroll.docs').then(m => m.InfiniteScrollMultiselectComponent), path: 'infinite-scroll', title: 'Infinite scroll multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./inline-message/inline-message.docs').then(m => m.InlineMessageMultiselectComponent), path: 'inline-message', title: 'Inline message multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./manual-autocomplete/manual-autocomplete.docs').then(m => m.ManualAutocompleteMultiselectComponent), path: 'manual-autocomplete', title: 'Manual autocomplete multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven/model-driven.docs').then(m => m.ModelDrivenMultiselectComponent), path: 'model-driven', title: 'Model driven multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven-fb/model-driven-fb.docs').then(m => m.ModelDrivenFbMultiselectComponent), path: 'model-driven-fb', title: 'Model driven fb multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./model-driven-with-programmatic-selection/model-driven-with-programmatic-selection.docs').then(m => m.ModelDrivenProgrammticSelectionMultiselectComponent), path: 'model-driven-with-programmatic-selection', title: 'Model driven with programmatic selection multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./read-only/read-only.docs').then(m => m.ReadOnlyMultiselectComponent), path: 'read-only', title: 'Read only multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./template-driven/template-driven.docs').then(m => m.TemplateDrivenMultiselectComponent), path: 'template-driven', title: 'Template driven multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./template-driven-with-programmatic-selection/template-driven-with-programmatic-selection.docs').then(m => m.TemplateDrivenProgrammaticSelectionMultiselectComponent), path: 'template-driven-with-programmatic-selection', title: 'Template driven with programmatic selection multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-disabled-option/with-disabled-option.docs').then(m => m.WithDisabledOptionMultiselectComponent), path: 'with-disabled-option', title: 'With disabled option multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-multiple-selections-and-vertical-scroll/with-multiple-selections-and-vertical-scroll.docs').then(m => m.MultiselectWithMultipleSelectionsAndVerticalScrollComponent), path: 'with-multiple-selections-and-vertical-scroll', title: 'With multiple selections and vertical scroll multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-scroll-bar/with-scroll-bar.docs').then(m => m.WithScrollMultiselectComponent), path: 'with-scroll-bar', title: 'With scroll bar multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-select-and-unselect-all-buttons/with-select-and-unselect-all-buttons.docs').then(m => m.SelectAndUnselectAllMenuMultiselectComponent), path: 'with-select-and-unselect-all-buttons', title: 'With select and unselect all buttons multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./without-dropdown-chevron/without-dropdown-chevron.docs').then(m => m.WithoutDropdownChevronMultiselectComponent), path: 'without-dropdown-chevron', title: 'Without dropdown chevron multiselect component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX }
];

export default multiselectRoutes;
/**
 *              Copyright (c) 2025 Visa, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **/
/** This file is autogenerated */
import { Routes } from '@angular/router';
import { TITLE_SEPARATOR, TITLE_SUFFIX } from 'apps/workshop/src/assets/app.constants';

export const navigationDrawerRoutes: Routes = [
	{ loadComponent: () => import('./navigation-drawer.docs').then(m => m.NavigationDrawerDocsComponent), path: '' },
	{ loadComponent: () => import('./active-element/active-element.docs').then(m => m.ActiveElementNavDrawerComponent), path: 'active-element', title: 'Active element navigation drawer component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./alternate/alternate.docs').then(m => m.AlternateNavDrawerComponent), path: 'alternate', title: 'Alternate navigation drawer component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./alternate-with-active-element/alternate-with-active-element.docs').then(m => m.AlternateActiveElementNavDrawerComponent), path: 'alternate-with-active-element', title: 'Alternate with active element navigation drawer component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./alternate-with-icons/alternate-with-icons.docs').then(m => m.AlternateWithIconsNavDrawerComponent), path: 'alternate-with-icons', title: 'Alternate with icons navigation drawer component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./default/default.docs').then(m => m.DefaultNavDrawerComponent), path: 'default', title: 'Default navigation drawer component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./nested/nested.docs').then(m => m.NestedNavDrawerComponent), path: 'nested', title: 'Nested navigation drawer component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./nested-with-section-titles/nested-with-section-titles.docs').then(m => m.NestedWithSectionTitlesNavDrawerComponent), path: 'nested-with-section-titles', title: 'Nested with section titles navigation drawer component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-icons/with-icons.docs').then(m => m.WithIconsNavDrawerComponent), path: 'with-icons', title: 'With icons navigation drawer component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX },
	{ loadComponent: () => import('./with-section-titles/with-section-titles.docs').then(m => m.WithSectionTitleNavDrawerComponent), path: 'with-section-titles', title: 'With section titles navigation drawer component | Example' + TITLE_SEPARATOR + TITLE_SUFFIX }
];

export default navigationDrawerRoutes;
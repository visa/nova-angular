/**
 *              © 2025 Visa
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **/
import { Injectable } from '@angular/core';

/**
 * This unique ID generator service is primarily used internally by the library but can be leveraged directly for custom implementations.
 */
@Injectable({
  providedIn: 'root'
})
export class UUIDService {
  /**
   * Object to store generated IDs.
   */
  private UUIDs: any = {};

  /** @ignore */
  private _getRandomId() {
    return (
      Math.floor(Math.random() * 10).toString() +
      Math.floor(Math.random() * 10).toString() +
      Math.floor(Math.random() * 10).toString() +
      Math.floor(Math.random() * 10).toString() +
      Math.floor(Math.random() * 10).toString() +
      Math.floor(Math.random() * 10).toString()
    );
  }

  /**
   * The getUUID method generates a random ID. <br>
   * Works in tandem with <code>checkUUID</code> until a unique ID is generated.
   * @param name Optional string to start the ID.
   * @returns string
   */
  getUUID(prefix?: string): string {
    prefix = prefix ? prefix : '';
    const uuid = '' + prefix + this._getRandomId();
    return this.checkUUID(uuid, prefix);
  }

  /**
   * The checkUUID method verifies that the ID has not already been generated by the getUUID method. <br>
   * Works in tandem with <code>getUUID</code> until a unique ID is generated.
   * @param uuid ID to check.
   * @param name Optional string to start the ID.
   * @returns uuid
   */
  checkUUID(uuid: string, prefix?: string): string {
    if (this.UUIDs[uuid]) {
      return this.getUUID(prefix);
    }
    this.UUIDs[uuid] = 1;
    return uuid;
  }
}
